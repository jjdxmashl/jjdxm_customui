apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.jjdxm_minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.jjdxm_versionCode
        versionName rootProject.ext.jjdxm_versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile rootProject.ext.jjdxm_v7
    compile 'com.nineoldandroids:library:2.4.0'
}

//定义一个函数，target是生成jar包的文件名，classDir是class文件所在的文件夹
def makeJar(String target,String classDir){
	exec{
		executable "jar"   //调用jar
		args "cvf",target
		args "-C", classDir
		args "","."
	}
}
    
//新建一个task,名为buildLib,依赖build(build是一个自带的task)
task buildLib(dependsOn:['build'])<< {
	makeJar("jjdxmbaseutils.jar","build/intermediates/classes/release")
}
